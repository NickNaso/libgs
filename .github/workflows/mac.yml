name: 'Build for macOS'
on: [push, pull_request]

jobs:
    build:
      runs-on: ${{ matrix.os }}
      strategy:

          matrix:
              os: [macos-latest]
              architecture: [x64, arm64]
              node-version: [20.x]
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Cache
            uses: actions/cache@v4
            id: npm-cache
            with:
              path: |
                  ~/.npm
                  node_modules/.cache
              key: ${{ matrix.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
              restore-keys: |
                  ${{ matrix.os }}-node-${{ matrix.node-version }}-
          
          - name: Install Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
              cache: 'npm'
              cache-dependency-path: package.json
              
          - name: Install Node.js modules ...
            run: npm install

          - name: Environment information
            run: npx envinfo
          
          - name: Build
            run: | 
              if [ "${{ matrix.architecture }}" = "arm64" ]; then
                node index.js -p darwin -a aarch64
              fi
              if [ "${{ matrix.architecture }}" = "x64" ]; then
                node index.js
              fi

          - uses: actions/upload-artifact@v4.3.3
            with:
              name: |
                MacOS-${{ matrix.architecture }} build Directory
              path: |
                ghostpdl/bin

          - uses: ncipollo/release-action@v1
            with:
              artifacts: "MacOS-${{ matrix.architecture }} build Directory"