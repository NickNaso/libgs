name: 'Build for linux'
on: [workflow_call, pull_request]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:

            matrix:
                os: [ubuntu-latest]
                architecture: [
                  x64, arm64, armv7, armv6 
                ]
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install dependencies
              run: |
                echo "Install for Linux ..."
                sudo apt update
                sudo apt upgrade -y
                sudo apt install build-essential -y
                sudo apt install g++-aarch64-linux-gnu -y
                sudo apt install g++-arm-linux-gnueabihf -y

            - name: Cache
              uses: actions/cache@v4
              id: npm-cache
              with:
                path: |
                    ~/.npm
                    node_modules/.cache
                key: ${{ matrix.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
                restore-keys: |
                    ${{ matrix.os }}-node-${{ matrix.node-version }}-
            
            - name: Install Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node-version }}
                cache: 'npm'
                cache-dependency-path: package.json
                
            - name: Install Node.js modules ...
              run: npm install

            - name: Environment information
              run: npx envinfo
            
            - name: Build
              run: node index.js -a ${{ matrix.architecture }}

            - name: Upload build Artifact
              uses: actions/upload-artifact@v4
              with:
                name: gs-linux-${{ matrix.architecture }}.tar.gz
                path: ./